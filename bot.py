import telebot
import configure
import sqlite3
from telebot import types
import time
from xlsxwriter.workbook import Workbook

client = telebot.TeleBot(configure.config['token'])
db = sqlite3.connect('baza.db', check_same_thread=False)
sql = db.cursor()
markdown = """
    *bold text*
    _italic text_
    [text](URL)
    """

# database

sql.execute(
    """CREATE TABLE IF NOT EXISTS users (id BIGINT, nick TEXT, access INT)""")
sql.execute(
    """CREATE TABLE IF NOT EXISTS tasks (id BIGINT, nick TEXT, number INT, time TEXT, message TEXT)""")
db.commit()

# –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏–ª–∏ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–æ–≤ –∏ –≤—ã–≤–æ–¥ –º–µ–Ω—é


@client.message_handler(commands=['start'])
def start(message):
    try:
        getname = message.from_user.first_name
        cid = message.chat.id
        uid = message.from_user.id
        sql.execute(f"SELECT id FROM users WHERE id = {uid}")
        if sql.fetchone() is None:
            sql.execute(
                f"INSERT INTO users VALUES ({uid}, '{getname}', 0)")
            msg = client.send_message(cid, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {getname}!\n"
                                      "–Ø –±–æ—Ç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ-—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π —Å–ª—É–∂–±—ã\n"
                                      "–ú–æ—è —Ü–µ–ª—å –ø–æ–º–æ—á—å –≤ —Ä–µ—à–µ–Ω–∏–∏ –í–∞—à–µ–π –ø—Ä–æ–±–ª–µ–º—ã")
            db.commit()
            sql.execute(f"SELECT * FROM users WHERE id = {uid}")
            getaccess = sql.fetchone()[2]
            if getaccess == 0:
                client.send_message(cid, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1 = types.KeyboardButton("–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É")
                markup.add(btn1)
                client.send_message(message.from_user.id,
                                    "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ: –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É", reply_markup=markup)
            elif getaccess == 777:
                client.send_message(cid, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1 = types.KeyboardButton("–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
                markup.add(btn1)
                client.send_message(message.from_user.id,
                                    "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ: –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É", reply_markup=markup)
            elif getaccess == 1:
                client.send_message(cid, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –ò–Ω–∂–µ–Ω–µ—Ä")
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1 = types.KeyboardButton("–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –ò–Ω–∂–µ–Ω–µ—Ä–∞")
                markup.add(btn1)
                client.send_message(message.from_user.id,
                                    "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ: –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É", reply_markup=markup)
        else:
            msg = client.send_message(cid, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {getname}!\n"
                                      "–Ø –±–æ—Ç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ-—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π —Å–ª—É–∂–±—ã\n"
                                      "–ú–æ—è —Ü–µ–ª—å –ø–æ–º–æ—á—å –≤ —Ä–µ—à–µ–Ω–∏–∏ –í–∞—à–µ–π –ø—Ä–æ–±–ª–µ–º—ã")
            sql.execute(f"SELECT * FROM users WHERE id = {uid}")
            getaccess = sql.fetchone()[2]
            if getaccess == 0:
                client.send_message(cid, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1 = types.KeyboardButton("–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É")
                markup.add(btn1)
                client.send_message(message.from_user.id,
                                    "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ: –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É", reply_markup=markup)
            elif getaccess == 777:
                client.send_message(cid, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1 = types.KeyboardButton("–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
                markup.add(btn1)
                client.send_message(message.from_user.id,
                                    "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ: –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É", reply_markup=markup)
            elif getaccess == 1:
                client.send_message(cid, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –ò–Ω–∂–µ–Ω–µ—Ä")
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1 = types.KeyboardButton("–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –ò–Ω–∂–µ–Ω–µ—Ä–∞")
                markup.add(btn1)
                client.send_message(message.from_user.id,
                                    "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ: –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É", reply_markup=markup)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥')


# –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î
@client.message_handler(commands=['users'])
def allusers(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        sql.execute(f"SELECT * FROM users WHERE id = {uid}")
        getaccess = sql.fetchone()[2]
        accessquery = 777
        if getaccess < accessquery:
            client.send_message(cid, '‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!')
        else:
            text = '*üóÉ | –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:*\n\n'
            idusernumber = 0
            for info in sql.execute(f"SELECT * FROM users"):
                if info[2] == 0:
                    accessname = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
                elif info[2] == 777:
                    accessname = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
                elif info[2] == 1:
                    accessname = '–ò–Ω–∂–µ–Ω–µ—Ä'
                idusernumber += 1
                text += f"*{idusernumber}. {info[0]} ({info[1]})*\n* | –£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞:* {accessname}\n*‚úâÔ∏è | –ü—Ä–æ—Ñ–∏–ª—å:*" + \
                    f" [{info[1]}](tg://user?id="+str(info[0])+")\n\n"
            client.send_message(cid, f"{text}", parse_mode='Markdown')
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


# –°–ø–∏—Å–æ–∫ –ó–∞–¥–∞—á –≤ –ë–î
@client.message_handler(commands=['tasks'])
def alltasks(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        sql.execute(f"SELECT * FROM users WHERE id = {uid}")
        getaccess = sql.fetchone()[2]
        accessquery = 1
        if getaccess < accessquery:
            client.send_message(cid, '‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!')
        else:
            text = '*üóÉ | –°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –≤ —Ä–∞–±–æ—Ç–µ:*\n\n'
            idtasknumber = 0
            for info in sql.execute(f"SELECT * FROM tasks"):
                text += f"*–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏ {info[2]}*\n*–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ {info[3]}*\n*–¢–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏:*{info[4]}*\n*\n*‚úâÔ∏è | –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –ü—Ä–æ—Ñ–∏–ª—å:*" + \
                    f" [{info[1]}](tg://user?id="+str(info[0])+")\n\n"
            client.send_message(cid, f"{text}", parse_mode='Markdown')
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

# –ó–∞—è–≤–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞


@client.message_handler(commands=['taskcomplt'])
def taskcomplt(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        sql.execute(f"SELECT * FROM users WHERE id = {uid}")
        getaccess = sql.fetchone()[2]
        accessquery = 1
        if getaccess < accessquery:
            client.send_message(cid, '‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!')
        else:
            msg = client.send_message(
                cid, f"*–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤—ã–ø–æ–ª–Ω–µ–Ω–æ–π –∑–∞—è–≤–∫–∏:*", parse_mode='Markdown')
            client.register_next_step_handler(msg, taskcomplt_next)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


def taskcomplt_next(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        if message.text == message.text:
            global numbertask
            numbertask = int(message.text)
            for info in sql.execute(f"SELECT * FROM users WHERE id = {uid}"):
                for infotask in sql.execute(f"SELECT * FROM tasks WHERE number = {numbertask}"):
                    rmk = types.InlineKeyboardMarkup()
                    item_yes = types.InlineKeyboardButton(
                        text='‚úÖ', callback_data='taskcompltyes')
                    item_no = types.InlineKeyboardButton(
                        text='‚ùå', callback_data='taskcompltno')
                    rmk.add(item_yes, item_no)
                    msg = client.send_message(
                        cid, f"–î–∞–Ω–Ω—ã–µ –æ –∑–∞—è–≤–∫–µ:\n\n–ù–æ–º–µ—Ä –∑–∞—è–∫–∏: {infotask[2]}\nID –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {infotask[0]}\n–ò–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {infotask[1]}\n–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {infotask[3]}\n–¢–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏: {infotask[4]}\n\n–í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –∑–∞—è–≤–∫—É? –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –±—É–¥–µ—Ç –ù–ï–í–û–ó–ú–û–ñ–ù–û.", reply_markup=rmk)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


@client.callback_query_handler(lambda call: call.data == 'taskcompltyes' or call.data == 'taskcompltno')
def taskcomplt_callback(call):
    try:
        if call.data == 'taskcompltyes':
            sql.execute(f"SELECT * FROM tasks")
            sql.execute(f"DELETE FROM tasks WHERE number = {numbertask}")
            client.delete_message(call.message.chat.id,
                                  call.message.message_id-0)
            client.send_message(call.message.chat.id, f"‚úÖ | –ó–∞—è–≤–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
            db.commit()
        elif call.data == 'taskcompltno':
            client.delete_message(call.message.chat.id,
                                  call.message.message_id-0)
            client.send_message(call.message.chat.id, f"üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏")
        client.answer_callback_query(callback_query_id=call.id)
    except:
        client.send_message(call.message.chat.id,
                            f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

# –≠–∫—Å–ø–æ—Ä—Ç –∑–∞—è–≤–æ–∫ –∏–∑ –ë–î –≤ XML


@client.message_handler(commands=['exportexcel'])
def exportexcel(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        sql.execute(f"SELECT * FROM users WHERE id = {uid}")
        getaccess = sql.fetchone()[2]
        accessquery = 777
        if getaccess < accessquery:
            client.send_message(cid, '‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!')
        else:
            workbook = Workbook('DataBase.xlsx')
            worksheet = workbook.add_worksheet()
            sql.execute("SELECT * FROM tasks")
            mysel = sql.execute("SELECT * FROM tasks")
            for i, row in enumerate(mysel):
                for j, value in enumerate(row):
                    worksheet.write(i, j, value)
            workbook.close()
            client.send_message(message.from_user.id,
                                '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤—ã–≥—Ä—É–∂–µ–Ω–∞')
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID


@client.message_handler(commands=['getprofile', 'info'])
def getprofile(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        sql.execute(f"SELECT * FROM users WHERE id = {uid}")
        getaccess = sql.fetchone()[2]
        accessquery = 777
        if getaccess < accessquery:
            client.send_message(cid, '‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!')
        else:
            for info in sql.execute(f"SELECT * FROM users WHERE id = {uid}"):
                msg = client.send_message(
                    cid, f'–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n –ü—Ä–∏–º–µ—Ä: {info[0]}')
                client.register_next_step_handler(msg, getprofile_next)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

# –ü—Ä–∏—Å–≤–æ–µ–Ω–∏–µ –∏–º—ë–Ω –ø–æ —è—á–µ–π–∫–µ access


def getprofile_next(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        if message.text == message.text:
            getprofileid = message.text
            for info in sql.execute(f"SELECT * FROM users WHERE id = {getprofileid}"):
                if info[2] == 0:
                    accessname = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
                elif info[2] == 777:
                    accessname = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
                elif info[2] == 1:
                    accessname = '–ò–Ω–∂–µ–Ω–µ—Ä'
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

# –í—ã–±–æ—Ä –∫–æ–º—É –≤—ã–¥–∞—Ç—å –ø—Ä–∞–≤–∞


@client.message_handler(commands=['access', 'setaccess', 'dostup'])
def setaccess(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        sql.execute(f"SELECT * FROM users WHERE id = {uid}")
        getaccess = sql.fetchone()[2]
        accessquery = 777
        if getaccess < accessquery:
            client.send_message(cid, f"‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!")
        else:
            for info in sql.execute(f"SELECT * FROM users WHERE id = {uid}"):
                msg = client.send_message(
                    cid, '–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n –ü—Ä–∏–º–µ—Ä: 7561592', parse_mode="Markdown")
                client.register_next_step_handler(msg, access_user_id_answer)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

# –í—ã–±–æ—Ä –≤—ã–¥–∞–≤–∞–µ–º—ã—Ö –ø—Ä–∞–≤


def access_user_id_answer(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        if message.text == message.text:
            global usridaccess
            usridaccess = message.text
            rmk = types.ReplyKeyboardMarkup(resize_keyboard=True)
            rmk.add(types.KeyboardButton('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'), types.KeyboardButton(
                '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'), types.KeyboardButton('–ò–Ω–∂–µ–Ω–µ—Ä'))
            msg = client.send_message(
                cid, '–ö–∞–∫–æ–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –í—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å?:', reply_markup=rmk, parse_mode="Markdown")
            client.register_next_step_handler(msg, access_user_access_answer)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

# –í—ã–±–æ—Ä –≤—ã–¥–∞–≤–∞–µ–º—ã—Ö –ø—Ä–∞–≤


def access_user_access_answer(message):
    try:
        global accessgaved
        global accessgavedname
        cid = message.chat.id
        uid = message.from_user.id
        rmk = types.InlineKeyboardMarkup()
        access_yes = types.InlineKeyboardButton(
            text='‚úÖ', callback_data='setaccessyes')
        access_no = types.InlineKeyboardButton(
            text='‚ùå', callback_data='setaccessno')
        rmk.add(access_yes, access_no)
        for info in sql.execute(f"SELECT * FROM users WHERE id = {usridaccess}"):
            if message.text == "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å":
                accessgavedname = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
                accessgaved = 0
            elif message.text == "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä":
                accessgavedname = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                accessgaved = 777
            elif message.text == "–ò–Ω–∂–µ–Ω–µ—Ä":
                accessgavedname = "–ò–Ω–∂–µ–Ω–µ—Ä"
                accessgaved = 1

            client.send_message(
                cid, f'–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–¥–∞—á–∏:\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {usridaccess} ({info[1]})\n –£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞: {message.text}\n\n –í–µ—Ä–Ω–æ?', reply_markup=rmk)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è\–æ—Ç–∫–∞–∑–∞ –≤—ã–¥–∞—á–∏ –ø—Ä–∞–≤


@client.callback_query_handler(lambda call: call.data == 'setaccessyes' or call.data == 'setaccessno')
def access_user_gave_access(call):
    try:
        removekeyboard = types.ReplyKeyboardRemove()
        if call.data == 'setaccessyes':
            for info in sql.execute(f"SELECT * FROM users WHERE id = {usridaccess}"):
                sql.execute(
                    f"UPDATE users SET access = {accessgaved} WHERE id = {usridaccess}")
                db.commit()
                client.delete_message(
                    call.message.chat.id, call.message.message_id-0)
                client.send_message(
                    call.message.chat.id, f'‚úÖ | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {info[1]} –≤—ã–¥–∞–Ω —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ {accessgavedname}', reply_markup=removekeyboard)
        elif call.data == 'setaccessno':
            for info in sql.execute(f"SELECT * FROM users WHERE id = {usridaccess}"):
                client.delete_message(
                    call.message.chat.id, call.message.message_id-0)
                client.send_message(
                    call.message.chat.id, f'üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –≤—ã–¥–∞—á—É —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞ {accessgavedname} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {info[1]}', reply_markup=removekeyboard)
        client.answer_callback_query(callback_query_id=call.id)
    except:
        client.send_message(f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

# –í—ã–¥–∞—á–∞ –ø—Ä–∞–≤ –ê–¥–º–∏–Ω–∞


@client.message_handler(commands=['getadminZN'])
def getadminclientchik(message):
    if message.from_user.id == 1: # –¢—É—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å id 1–≥–æ –∞–¥–º–∏–Ω–∞
        sql.execute(f"UPDATE users SET access = 777 WHERE id = 1") # –¢—É—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å id 1–≥–æ –∞–¥–º–∏–Ω–∞
        client.send_message(
            message.chat.id, f"‚úÖ | –í—ã –≤—ã–¥–∞–ª–∏ –ø—Ä–∞–≤–∞ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        db.commit()
    else:
        client.send_message(message.chat.id, f"‚õîÔ∏è | –û—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ!")

# –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É


@client.message_handler(commands=['messageIT'])
def teh(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        msg = client.send_message(
            cid, f"*üì® | –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–µ*", parse_mode='Markdown')
        client.register_next_step_handler(msg, teh_next)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ\–æ—Ç–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è


def teh_next(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        if message.text == message.text:
            global tehtextbyuser
            global tehnamebyuser
            global tehidbyuser
            tehidbyuser = int(message.from_user.id)
            tehnamebyuser = str(message.from_user.first_name)
            tehtextbyuser = str(message.text)
            rmk = types.InlineKeyboardMarkup()
            item_yes = types.InlineKeyboardButton(
                text='‚úâÔ∏è', callback_data='tehsend')
            item_no = types.InlineKeyboardButton(
                text='‚ùå', callback_data='tehno')
            rmk.add(item_yes, item_no)
            msg = client.send_message(
                cid, f"‚úâÔ∏è | –î–∞–Ω–Ω—ã–µ –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ:\n\n –¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {tehtextbyuser}\n\n –í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–µ?", parse_mode='Markdown', reply_markup=rmk)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è\–æ—Ç–∫–∞–∑–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
# –í —Å–ª—É—á–∞–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–æ—Ä–∫–∏ –≤ –ë–î


@client.callback_query_handler(func=lambda call: call.data == 'tehsend' or call.data == 'tehno')
def teh_callback(call):
    try:
        if call.data == 'tehsend':
            for info in sql.execute(f"SELECT * FROM users WHERE id = {call.from_user.id}"):
                client.delete_message(
                    call.message.chat.id, call.message.message_id-0)
                client.send_message(
                    call.message.chat.id, f"‚úâÔ∏è | –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–µ, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")
                named_tuple = time.localtime()  # –ø–æ–ª—É—á–∏—Ç—å struct_time
                time_string = time.strftime("%m/%d/%Y, %H:%M:%S", named_tuple)
                sql.execute(f"SELECT * FROM tasks")
                number_task = sql.fetchone()[2]
                number_tasks = number_task
                sql.execute(
                    f"INSERT INTO tasks VALUES ({tehidbyuser}, '{tehnamebyuser}', {number_tasks}, '{time_string}', '{tehtextbyuser}')")
                db.commit()
                sql.execute(f"UPDATE tasks SET number = rowid ")
                db.commit()
                client.send_message(
                    1665883795, f"‚úâÔ∏è | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {tehnamebyuser} –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É\n\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {tehidbyuser}\n–¢–µ–∫—Å—Ç: {tehtextbyuser}\n\n–ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞–ø–∏—à–∏—Ç–µ /otvet")
        elif call.data == 'tehno':
            client.delete_message(call.message.chat.id,
                                  call.message.message_id-0)
            client.send_message(
                call.message.chat.id, f"üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–µ")
        client.answer_callback_query(callback_query_id=call.id)
    except:
        client.send_message(f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

# –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é


@client.message_handler(commands=['otvet'])
def sendmsgtouser(message):
    try:
        cid = message.chat.id
        msg = client.send_message(
            cid, f"üë§ | –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ:")
        client.register_next_step_handler(msg, sendmsgtouser_next)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

# –ù–∞–±–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é


def sendmsgtouser_next(message):
    try:
        cid = message.chat.id

        if message.text == message.text:
            global getsendmsgtouserid
            getsendmsgtouserid = int(message.text)
            msg = client.send_message(
                cid, f"üì® | –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:")
            client.register_next_step_handler(msg, sendmsgtouser_next_text)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é


def sendmsgtouser_next_text(message):
    try:
        cid = message.chat.id

        if message.text == message.text:
            global getsendmsgtousertext
            getsendmsgtousertext = str(message.text)
            rmk = types.InlineKeyboardMarkup()
            item_yes = types.InlineKeyboardButton(
                text='‚úÖ', callback_data='sendmsgtouseryes')
            item_no = types.InlineKeyboardButton(
                text='‚ùå', callback_data='sendmsgtouserno')
            rmk.add(item_yes, item_no)
            msg = client.send_message(
                cid, f"–î–∞–Ω–Ω—ã–µ –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:\n\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {getsendmsgtouserid}\n –¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {getsendmsgtousertext}\n\n –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ?", reply_markup=rmk)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

# –û–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏ –æ—Ç–º–µ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è


@client.callback_query_handler(func=lambda call: call.data == 'sendmsgtouseryes' or call.data == 'sendmsgtouserno')
def sendmsgtouser_callback(call):
    try:
        if call.data == 'sendmsgtouseryes':
            client.delete_message(call.message.chat.id,
                                  call.message.message_id-0)
            client.send_message(call.message.chat.id,
                                f"‚úâÔ∏è | –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
            client.send_message(
                getsendmsgtouserid, f"‚úâÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–∏—Å–ª–∞–ª –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n{getsendmsgtousertext}")
        elif call.data == 'sendmsgtouserno':
            client.delete_message(call.message.chat.id,
                                  call.message.message_id-0)
            client.send_message(
                call.message.chat.id, f"üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
        client.answer_callback_query(callback_query_id=call.id)
    except:
        client.send_message(call.message.chat.id,
                            f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

# –ü–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –Ω–∏–∫—É


@client.message_handler(commands=['getid'])
def getiduser(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        sql.execute(f"SELECT * FROM users WHERE id = {uid}")
        getaccess = sql.fetchone()[2]
        accessquery = 777
        if getaccess < accessquery:
            client.send_message(cid, f"‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!")
        else:
            msg = client.send_message(cid, '–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:')
            client.register_next_step_handler(msg, next_getiduser_name)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


def next_getiduser_name(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        if message.text == message.text:
            getusername = message.text
            sql.execute(f"SELECT * FROM users WHERE nick = '{getusername}'")
            result = sql.fetchone()[0]
            client.send_message(cid, f'üë§ | ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {result}')
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

# –†–∞–∑–ª–∏—á–Ω—ã–µ –º–µ–Ω—é


@client.message_handler(content_types=['text'])
def menu(message):
    try:
        uid = message.from_user.id
        sql.execute(f"SELECT * FROM users WHERE id = {uid}")
        getaccess = sql.fetchone()[2]
# –ú–µ–Ω—é –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if message.text == "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞" and getaccess == 777:
            markup = types.ReplyKeyboardMarkup(
                resize_keyboard=True)
            btn1 = types.KeyboardButton('üì∞ –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ')
            btn2 = types.KeyboardButton('üìÅ –¢–µ–ª–µ—Ñ–æ–Ω—ã –æ—Ç–¥–µ–ª–æ–≤')
            btn3 = types.KeyboardButton('üìö –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞')
            markup.add(btn1, btn2, btn3)
            client.send_message(
                message.from_user.id, "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç ZN ITS", reply_markup=markup)
            client.send_message(message.from_user.id,
                                '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª')

        elif message.text == 'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' and getaccess == 777:
            markup = types.ReplyKeyboardMarkup(
                resize_keyboard=True)
            btn1 = types.KeyboardButton('üì∞ –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ')
            btn2 = types.KeyboardButton('üìÅ –¢–µ–ª–µ—Ñ–æ–Ω—ã –æ—Ç–¥–µ–ª–æ–≤')
            btn3 = types.KeyboardButton('üìö –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞')
            markup.add(btn1, btn2, btn3)
            client.send_message(
                message.from_user.id, "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç ZN ITS", reply_markup=markup)
            client.send_message(message.from_user.id,
                                '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª')

        elif message.text == 'üìö –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞' and getaccess == 777:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            btn2 = types.KeyboardButton("/users")
            btn3 = types.KeyboardButton("/getprofile")
            btn4 = types.KeyboardButton("/setaccess")
            btn5 = types.KeyboardButton("/getid")
            btn6 = types.KeyboardButton("/tasks")
            btn7 = types.KeyboardButton("/exportexcel")
            markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7)
            client.send_message(message.from_user.id, '–¢–≤–æ–π —Ä–∞–∑–¥–µ–ª: üìö –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞\n'
                                '/users - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î\n'
                                '/getprofile - –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID\n'
                                '/setaccess - –í—ã–¥–∞—Ç—å –ø—Ä–∞–≤–∞\n'
                                '/getid - –ü–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –Ω–∏–∫—É\n'
                                '/tasks - –ü–æ–ª—É—á–∏—Ç—å –∑–∞—è–≤–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ\n'
                                '/exportexcel - –í—ã–≥—Ä—É–∑–∏—Ç—å –∑–∞—è–≤–∫–∏ –∏–∑ –ë–î –≤ Excel\n',
                                reply_markup=markup, parse_mode='Markdown')

# –ú–µ–Ω—é —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        elif message.text == "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É" and getaccess == 0:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('üì∞ –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ')
            btn2 = types.KeyboardButton('üìÅ –¢–µ–ª–µ—Ñ–æ–Ω—ã –æ—Ç–¥–µ–ª–æ–≤')
            btn3 = types.KeyboardButton('üìö –ß–∞—Å—Ç—ã–µ –ø—Ä–æ–±–ª–µ–º—ã')
            markup.add(btn1, btn2, btn3)
            client.send_message(
                message.from_user.id, "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç ZN ITS", reply_markup=markup)
            client.send_message(message.from_user.id,
                                '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª')

        elif message.text == 'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' and getaccess == 0:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('üì∞ –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ')
            btn2 = types.KeyboardButton('üìÅ –¢–µ–ª–µ—Ñ–æ–Ω—ã –æ—Ç–¥–µ–ª–æ–≤')
            btn3 = types.KeyboardButton('üìö –ß–∞—Å—Ç—ã–µ –ø—Ä–æ–±–ª–µ–º—ã')
            markup.add(btn1, btn2, btn3)
            client.send_message(
                message.from_user.id, "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç ZN ITS", reply_markup=markup)
            client.send_message(message.from_user.id,
                                '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª')

# –ú–µ–Ω—é –ò–Ω–∂–µ–Ω–µ—Ä–∞
        elif message.text == "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –ò–Ω–∂–µ–Ω–µ—Ä–∞" and getaccess == 1:
            markup = types.ReplyKeyboardMarkup(
                resize_keyboard=True)
            btn1 = types.KeyboardButton('üì∞ –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ')
            btn2 = types.KeyboardButton('üìÅ –¢–µ–ª–µ—Ñ–æ–Ω—ã –æ—Ç–¥–µ–ª–æ–≤')
            btn3 = types.KeyboardButton('üìö –ß–∞—Å—Ç—ã–µ –ø—Ä–æ–±–ª–µ–º—ã')
            btn4 = types.KeyboardButton('üíª –ó–∞—è–≤–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ')
            markup.add(btn1, btn2, btn3, btn4)
            client.send_message(
                message.from_user.id, "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç ZN ITS", reply_markup=markup)
            client.send_message(message.from_user.id,
                                '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª')
        elif message.text == 'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' and getaccess == 1:
            markup = types.ReplyKeyboardMarkup(
                resize_keyboard=True)
            btn1 = types.KeyboardButton('üì∞ –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ')
            btn2 = types.KeyboardButton('üìÅ –¢–µ–ª–µ—Ñ–æ–Ω—ã –æ—Ç–¥–µ–ª–æ–≤')
            btn3 = types.KeyboardButton('üìö –ß–∞—Å—Ç—ã–µ –ø—Ä–æ–±–ª–µ–º—ã')
            btn4 = types.KeyboardButton('üíª –ó–∞—è–≤–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ')
            markup.add(btn1, btn2, btn3, btn4)
            client.send_message(
                message.from_user.id, "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç ZN ITS", reply_markup=markup)
            client.send_message(message.from_user.id,
                                '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª')

        elif message.text == 'üíª –ó–∞—è–≤–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ' and getaccess == 1:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            btn2 = types.KeyboardButton("/tasks")
            btn3 = types.KeyboardButton("/taskcomplt")
            markup.add(btn1, btn2, btn3)
            client.send_message(message.from_user.id, '–¢–≤–æ–π —Ä–∞–∑–¥–µ–ª: üíª –ó–∞—è–≤–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ\n'
                                '/tasks - –ü–æ–ª—É—á–∏—Ç—å –∑–∞—è–≤–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ\n'
                                '/taskcomplt - –û—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω—É—é –∑–∞—è–≤–∫—É\n',
                                reply_markup=markup, parse_mode='Markdown')
# –û–±—â–∏–µ –ø—É–Ω–∫—Ç—ã –∏ –ø–æ–¥–ø—É–Ω–∫—Ç—ã –º–µ–Ω—é
        elif message.text == 'üì∞ –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            btn2 = types.KeyboardButton("/messageIT")
            markup.add(btn1, btn2)
            client.send_message(message.from_user.id, '–¢–≤–æ–π —Ä–∞–∑–¥–µ–ª: üì∞ –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ\n',
                                reply_markup=markup, parse_mode='Markdown')

        elif message.text == 'üìÅ –¢–µ–ª–µ—Ñ–æ–Ω—ã –æ—Ç–¥–µ–ª–æ–≤':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn01 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            btn1 = types.KeyboardButton('üîé –ü—Ä–∏—ë–º–Ω–∞—è')
            btn2 = types.KeyboardButton('üîé –ê–≥—Ä–æ–æ—Ç–¥–µ–ª')
            btn3 = types.KeyboardButton('üîé IT —Å–ª—É–∂–±–∞')
            btn4 = types.KeyboardButton('üîé –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¢–µ—Å—Å–∞')
            btn5 = types.KeyboardButton('üîé –ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è')

            markup.add(btn01, btn1, btn2, btn3, btn4, btn5)
            client.send_message(message.from_user.id,
                                '‚¨á –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª', reply_markup=markup)

        elif message.text == 'üîé –ü—Ä–∏—ë–º–Ω–∞—è':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            markup.add(btn1)
            client.send_message(message.from_user.id, '–¢–≤–æ–π —Ä–∞–∑–¥–µ–ª: üîé –ü—Ä–∏—ë–º–Ω–∞—è\n \n–í–æ—Ç –∫–∞–∫–∏–µ –Ω–æ–º–µ—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã:\n'
                                '18111 - –ò–≤–∞–Ω–æ–≤–∞ –°—Ç–µ—Ñ–∞–Ω–∏—è –î–∞–≤–∏–¥–æ–≤–Ω–∞\n'
                                '18112 - –ê–ª–µ–∫—Å–µ–µ–≤–∞ –£–ª—å—è–Ω–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞\n'
                                '18113 - –ê–ª–µ–∫—Å–µ–µ–≤–∞ –î–∞—Ä—å—è –ú–∏—Ö–∞–π–ª–æ–≤–Ω–∞',
                                reply_markup=markup, parse_mode='Markdown')

        elif message.text == 'üîé IT —Å–ª—É–∂–±–∞':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            markup.add(btn1)
            client.send_message(message.from_user.id, '–¢–≤–æ–π —Ä–∞–∑–¥–µ–ª: üîé IT —Å–ª—É–∂–±–∞\n \n–í–æ—Ç –∫–∞–∫–∏–µ –Ω–æ–º–µ—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã:\n'
                                "18114 - –ö–æ—á–µ—Ç–æ–≤ –§—ë–¥–æ—Ä –ú–∏—Ö–∞–π–ª–æ–≤–∏—á\n"
                                "18115 - –ö—É–∑–Ω–µ—Ü–æ–≤ –ù–∏–∫–∏—Ç–∞ –ì–µ—Ä–º–∞–Ω–æ–≤–∏—á\n"
                                "18116 - –ü–µ—Ç—Ä–æ–≤–∞ –ê–Ω–Ω–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞",
                                reply_markup=markup, parse_mode='Markdown')

        elif message.text == 'üîé –ê–≥—Ä–æ–æ—Ç–¥–µ–ª':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            markup.add(btn1)
            client.send_message(message.from_user.id, '–¢–≤–æ–π —Ä–∞–∑–¥–µ–ª: üîé –ê–≥—Ä–æ–æ—Ç–¥–µ–ª\n \n –í–æ—Ç –∫–∞–∫–∏–µ –Ω–æ–º–µ—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã:\n'
                                "18124 - –†–æ–¥–∏–æ–Ω–æ–≤ –í–∞—Å–∏–ª–∏–π –ê–Ω—Ç–æ–Ω–æ–≤–∏—á\n"
                                "18125 - –ì–æ–ª–æ–≤–∏–Ω –ê—Ä—Ç–µ–º–∏–π –î–∞–Ω–∏–∏–ª–æ–≤–∏—á\n"
                                "18126 - –†—è–±–æ–≤–∞ –ê–Ω–∞—Å—Ç–∞—Å–∏—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞",
                                reply_markup=markup, parse_mode='Markdown')

        elif message.text == 'üîé –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¢–µ—Å—Å—ã':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            markup.add(btn1)
            client.send_message(message.from_user.id, '–¢–≤–æ–π —Ä–∞–∑–¥–µ–ª: üîé –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¢–µ—Å—Å—ã\n \n –í–æ—Ç –∫–∞–∫–∏–µ –Ω–æ–º–µ—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã:\n'
                                "18117 - –í–æ–ª–∫–æ–≤–∞ –ê–Ω–∞—Å—Ç–∞—Å–∏—è –ú–∞—Ä–∫–æ–≤–Ω–∞\n"
                                "18119 - –ë—ã–∫–æ–≤–∞ –ü–æ–ª–∏–Ω–∞ –ú–∏—Ö–∞–π–ª–æ–≤–Ω–∞\n"
                                "18120 - –ú–∞—Å–ª–µ–Ω–Ω–∏–∫–æ–≤ –î–∞–≤–∏–¥ –ë–æ—Ä–∏—Å–æ–≤–∏—á\n",
                                reply_markup=markup, parse_mode='Markdown')

        elif message.text == 'üîé –ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            markup.add(btn1)
            client.send_message(message.from_user.id, '–¢–≤–æ–π —Ä–∞–∑–¥–µ–ª: üîé –ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è\n \n –í–æ—Ç –∫–∞–∫–∏–µ –Ω–æ–º–µ—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã:\n'
                                "18121 -–î–µ–≥—Ç—è—Ä–µ–≤–∞ –í–µ—Ä–æ–Ω–∏–∫–∞ –ì–ª–µ–±–æ–≤–Ω–∞\n"
                                "18122 - –ë–∞–∂–µ–Ω–æ–≤–∞ –û–ª–∏–≤–∏—è –ï–≥–æ—Ä–æ–≤–Ω–∞\n"
                                "18123 - –ü–µ—Ç—Ä–æ–≤–∞ –ê–ª–∏—Å–∞ –ê–Ω–¥—Ä–µ–µ–≤–Ω–∞\n",
                                reply_markup=markup, parse_mode='Markdown')

        elif message.text == 'üìö –ß–∞—Å—Ç—ã–µ –ø—Ä–æ–±–ª–µ–º—ã':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn01 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            btn1 = types.KeyboardButton('üìö –ü–æ—á—Ç–∞')
            btn2 = types.KeyboardButton('üìö –¢–µ—Å—Å–∞')
            btn3 = types.KeyboardButton('üìö 1–° –ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ')
            markup.add(btn01, btn1, btn2, btn3)
            client.send_message(message.from_user.id,
                                '‚¨á –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª', reply_markup=markup)

        elif message.text == 'üìö –ü–æ—á—Ç–∞':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            markup.add(btn1)
            client.send_message(message.from_user.id, '–¢–≤–æ–π —Ä–∞–∑–¥–µ–ª: üìö –ü–æ—á—Ç–∞\n \n –í–æ—Ç —á—Ç–æ –µ—Å—Ç—å –≤ –¥–æ—Å—Ç—É–ø–µ:\n'
                                "–í–æ–ø—Ä–æ—Å: \n–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! –£ –º–µ–Ω—è –Ω–∞ –∫–æ–º–ø–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∏ –æ–¥–Ω–∞ –ø–æ—á—Ç–∞.\n"
                                "–í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Å—Ç–æ–∏—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤—Å–µ –ø–∏—Å—å–º–∞, –Ω–æ –æ–Ω–∏ –Ω–µ –ø—Ä–∏—Ö–æ–¥—è—Ç. –ê –∫–æ–≥–¥–∞ –∑–∞—Ö–æ–∂—É –Ω–∞ —è—â–∏–∫, —Ç–æ –æ–Ω –∑–∞–∫—Ä—ã—Ç. –ò –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è. –ß—Ç–æ –¥–µ–ª–∞—Ç—å? –°–ø–∞—Å–∏–±–æ.\n"
                                "–û—Ç–≤–µ—Ç: \n–ú–æ–∂–µ—Ç –±—ã—Ç—å, —Å—Ç–æ–∏—Ç —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –Ω–∞ –ø–æ—á—Ç–æ–≤–æ–º —è—â–∏–∫–µ.",
                                reply_markup=markup, parse_mode='Markdown')

        elif message.text == 'üìö –¢–µ—Å—Å–∞':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            markup.add(btn1)
            client.send_message(message.from_user.id, '–¢–≤–æ–π —Ä–∞–∑–¥–µ–ª: üìö –¢–µ—Å—Å–∞\n \n –í–æ—Ç —á—Ç–æ –µ—Å—Ç—å –≤ –¥–æ—Å—Ç—É–ø–µ:\n'
                                "–í–æ–ø—Ä–æ—Å: \n –ü–µ—Ä–µ—Å—Ç–∞–ª–∞ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å—Å—è –¢–µ—Å—Å–∞, –≤ —á—ë–º –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º–∞?\n"
                                "–û—Ç–≤–µ—Ç: \n –ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, —Ç–∞–∫–æ–µ —Å–ª—É—á–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ –∑–∞–≤–∏—Å–∞–µ—Ç —Å–µ—Å—Å–∏—è, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ–ª–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n"
                                "–í —Å–∫—Ä—ã—Ç—ã—Ö –∑–Ω–∞—á–∫–∞—Ö –Ω–∞–π—Ç–∏ –∏–∫–æ–Ω–∫—É –¢–µ—Å—Å—ã –∏ —á–µ—Ä–µ–∑ –∫–ª–∏–∫ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –º—ã—à–∏ —Å–¥–µ–ª–∞—Ç—å –≤—ã—Ö–æ–¥.",
                                reply_markup=markup, parse_mode='Markdown')

        elif message.text == 'üìö 1–° –ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            markup.add(btn1)
            client.send_message(message.from_user.id, '–¢–≤–æ–π —Ä–∞–∑–¥–µ–ª: üìö 1–° –ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ\n \n –í–æ—Ç —á—Ç–æ –µ—Å—Ç—å –≤ –¥–æ—Å—Ç—É–ø–µ:\n'
                                "–í–æ–ø—Ä–æ—Å: \n –ù–∞ —ç–∫—Ä–∞–Ω–µ –≤—ã—Å–≤–µ—á–∏–≤–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î, —á—Ç–æ –¥–µ–ª–∞—Ç—å?\n"
                                "–û—Ç–≤–µ—Ç: \n –ù–∞–ø–∏—à–∏—Ç–µ –∑–∞—è–≤–∫—É –≤ IT-–æ—Ç–¥–µ–ª, —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –∏ –ø–æ–º–æ–≥—É—Ç —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É",
                                reply_markup=markup, parse_mode='Markdown')
    except:
        client.send_message('üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏')


client.polling(none_stop=True)
